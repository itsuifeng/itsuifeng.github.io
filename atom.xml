<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Sanly's Blog]]></title>
  <subtitle><![CDATA[单身程序员一枚]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="https://itsuifeng.github.io//"/>
  <updated>2015-06-07T06:38:51.692Z</updated>
  <id>https://itsuifeng.github.io//</id>
  
  <author>
    <name><![CDATA[Sanly]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Java利器之-native加载]]></title>
    <link href="https://itsuifeng.github.io/2015/06/07/Java%E5%88%A9%E5%99%A8%E4%B9%8B-native%E5%8A%A0%E8%BD%BD/"/>
    <id>https://itsuifeng.github.io/2015/06/07/Java利器之-native加载/</id>
    <published>2015-06-07T05:22:06.000Z</published>
    <updated>2015-06-07T06:38:51.692Z</updated>
    <content type="html"><![CDATA[<hr>
<p>Java项目中有时候会涉及到一些第三方native调用，加载动态链接库(.dll、.so)文件经常会遇到一些错误，如无法加载，如何解决这个问题呢？</p>
<hr>
<ol>
<li>通过JVM启动参数设定<code>java -Djava.library.path=c：/naitve</code></li>
<li>在代码中设定<code>System.setProperty(&quot;java.library.path&quot;, &quot;c:/native&quot;);</code>(<font color="red">错误</font>);</li>
<li>利用反射机制注入库路劲，调用编写好的类<code>ClassPathTool.addToClassPath(&quot;c:/native&quot;)</code>实现。</li>
</ol>
<hr>
<ul>
<li><p>第一种方式是可以正确设置库文件加载路径的，程序能够正常运行；</p>
</li>
<li><p>第二种方式是不行的，java.library.path只有在JVM启动时候读取一次，因此使用第二种方式无法生效；</p>
</li>
<li>第三种方式通过反射机制注入库路径，能按照我的想法正常运行，以下是如何实现。</li>
</ul>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">ClassPathTool</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	public <span class="literal">static</span> <span class="keyword">void</span> addToClassPath(File classPathFile) &#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			Field field = ClassLoader.<span class="keyword">class</span>.getDeclaredField(<span class="string">"usr_paths"</span>);</span><br><span class="line">			field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">			</span><br><span class="line">			<span class="built_in">Object</span> obj = field.<span class="literal">get</span>(<span class="keyword">null</span>);</span><br><span class="line">			</span><br><span class="line">			<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list = <span class="keyword">new</span> ArrayList&lt;<span class="built_in">String</span>&gt;(Arrays.asList(((<span class="built_in">String</span>[]) obj)));</span><br><span class="line">			list.add(classPathFile.getAbsolutePath());</span><br><span class="line">			<span class="keyword">for</span>(File f : classPathFile.listFiles()) &#123;</span><br><span class="line">				list.add(f.getAbsolutePath());</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">String</span>[] arr = <span class="keyword">new</span> <span class="built_in">String</span>[<span class="number">0</span>];</span><br><span class="line">			field.<span class="literal">set</span>(<span class="keyword">null</span>, (<span class="built_in">String</span>[]) list.toArray(arr));</span><br><span class="line">		&#125; <span class="keyword">catch</span> (NoSuchFieldException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SecurityException e) &#123;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (IllegalArgumentException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<hr>
<p>Java项目中有时候会涉及到一些第三方native调用，加载动态链接库(.dll、.so)文件经常会遇到一些错误，如无法加载，如何解决这个问题呢？</p>
<hr>
<ol>
<li>通过JVM启动参数设定<code>java -Djava.library.pat]]>
    </summary>
    
      <category term="Java" scheme="https://itsuifeng.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何查看windows文件/文件夹占用进程]]></title>
    <link href="https://itsuifeng.github.io/2015/06/06/%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8Bwindows%E6%96%87%E4%BB%B6-%E6%96%87%E4%BB%B6%E5%A4%B9%E5%8D%A0%E7%94%A8%E8%BF%9B%E7%A8%8B/"/>
    <id>https://itsuifeng.github.io/2015/06/06/如何查看windows文件-文件夹占用进程/</id>
    <published>2015-06-06T07:12:31.000Z</published>
    <updated>2015-06-06T07:18:17.429Z</updated>
    <content type="html"><![CDATA[<hr>
<p>很多情况下，我会遇到在删除windows系统下某个文件或文件夹时，系统提示我该文件或文件夹被其它进程占用，从而无法删除该文件。也许你会尝试安装一些其它辅助软件（比如<span style="color:red">流氓360软件、XX卸载大师</span>），反正我觉得这个实在是太重量级了，况且我根本不想安装这些XX软件。那么到底还有没有其它更加方便的方法可以让我找到是哪一个进程占用了该文件呢？</p>
<blockquote>
<ol>
<li>右键 - Windows 7任务栏 - 启动任务管理器 - 性能 - 资源监视器；</li>
<li>在控制台中点击“CPU”标签定位到该标签页下；</li>
<li>在“关联的句柄”右侧的搜索框中输入“test”，此时系统会自动搜索与test句柄相关联的系统进程；</li>
<li>可以看到搜索到的进程为cmd.exe。cmd.exe进程正在调用test文件夹，才造成了对该文件夹删除的失败。右键单击该进程，然后选择“结束进程”命令弹出警告对话框，确认后即可结束cmd.exe进程。最后，删除test文件夹，可以看到该文件夹被成功删除。</li>
</ol>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<hr>
<p>很多情况下，我会遇到在删除windows系统下某个文件或文件夹时，系统提示我该文件或文件夹被其它进程占用，从而无法删除该文件。也许你会尝试安装一些其它辅助软件（比如<span style="color:red">流氓360软件、XX卸载大师</span>），反正我]]>
    </summary>
    
      <category term="windows" scheme="https://itsuifeng.github.io/tags/windows/"/>
    
  </entry>
  
</feed>